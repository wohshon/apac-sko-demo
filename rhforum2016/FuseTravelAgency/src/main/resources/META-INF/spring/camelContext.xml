<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean class="com.redhat.travelagency.AggregationStrat" id="aggStrat"/>
    <bean class="com.redhat.travelagency.BRMSReqProcessor" id="brmsReqProc"/>
    <bean class="com.redhat.travelagency.BRMSRespProcessor" id="brmsRespProc"/>
    <camelContext id="context-a07d96fd-3af7-4782-a701-b5f3c1d4e1cd"
        trace="false" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="urls" location="props.properties"/>
        <restConfiguration component="netty4-http" enableCORS="true"
            host="0.0.0.0" port="8182"/>
        <rest consumes="application/json" path="/rest">         
            <post uri="/book">
                <to uri="direct:book"/>
            </post>
        </rest>
      <route id="tap">
        <from uri="direct:tap"/>
        <!-- <log message="TAP : ${body}"/> -->
            <setHeader headerName="Exchange.HTTP_METHOD" id="_setHeadertest">
                <constant>POST</constant>
            </setHeader>
                 <setBody>
                     <simple>{ "event": "fuse" }</simple>
                 </setBody>

<!--          <to id="test" uri="http4://192.168.223.130:8080/events?exchangePattern=InOut&amp;bridgeEndpoint=true"/> -->
         <to id="test" uri="http4://{{DASHBOARDURL}}/events/fuse?exchangePattern=InOut&amp;bridgeEndpoint=true"/>
      </route>   

        <route id="bookings">
            <from id="_from1" uri="direct:book"/>
            <wireTap uri="direct:tap"/> 
            <unmarshal id="_unmarshal1">
                <json library="Gson" prettyPrint="true" unmarshalTypeName="com.redhat.travelagency.model.BookingReq"/>
            </unmarshal>
            <split id="_split1" parallelProcessing="true" strategyRef="aggStrat">
                <method
                    beanType="com.redhat.travelagency.BookingReqSplitter"
                    method="splitBody" ref="null"/>
                <choice id="_choice1">
                    <when id="_when1">
                        <simple>${body} is 'com.redhat.FlightReq'</simple>
                        <to id="_to1" uri="direct:flightRoute"/>
                    </when>
                    <when id="_when2">
                        <simple>${body} is 'com.redhat.HotelReq'</simple>
                        <to id="_to2" uri="direct:hotelRoute"/>
                    </when>
                    <when id="_when3">
                        <simple>${body} is 'com.redhat.CarReq'</simple>
                        <to id="_to3" uri="direct:carRoute"/>
                    </when>
                </choice>
            </split>
            <to id="_to4" uri="direct:brmsRoute"/>
        </route>
        <route id="flightRoute">
            <from id="_from2" uri="direct:flightRoute"/>
            <setHeader headerName="Exchange.HTTP_METHOD" id="_setHeader1">
                <constant>POST</constant>
            </setHeader>
            <marshal id="_marshal1">
                <json library="Gson"/>
            </marshal>
            <to id="_to5" uri="http4://{{FlightURL}}?exchangePattern=InOut&amp;bridgeEndpoint=true"/>
            <unmarshal id="_unmarshal2">
                <json library="Gson" prettyPrint="true" unmarshalTypeName="com.redhat.FlightResp"/>
            </unmarshal>
        </route>
        <route id="hotelRoute">
            <from id="_from3" uri="direct:hotelRoute"/>
            <setHeader headerName="Exchange.HTTP_METHOD" id="_setHeader2">
                <constant>POST</constant>
            </setHeader>
            <marshal id="_marshal2">
                <json library="Gson"/>
            </marshal>
            <to id="_to6" uri="http4://{{HotelURL}}?exchangePattern=InOut&amp;bridgeEndpoint=true"/>
            <unmarshal id="_unmarshal3">
                <json library="Gson" prettyPrint="true" unmarshalTypeName="com.redhat.HotelResp"/>
            </unmarshal>
        </route>
        <route id="carRoute">
            <from id="_from4" uri="direct:carRoute"/>
            <setHeader headerName="Exchange.HTTP_METHOD" id="_setHeader3">
                <constant>POST</constant>
            </setHeader>
            <marshal id="_marshal3">
                <json library="Gson"/>
            </marshal>
            <to id="_to7" uri="http4://{{CarURL}}?exchangePattern=InOut&amp;bridgeEndpoint=true"/>
            <unmarshal id="_unmarshal4">
                <json library="Gson" prettyPrint="true" unmarshalTypeName="com.redhat.CarResp"/>
            </unmarshal>
        </route>
        <route id="brms">
            <from id="_from5" uri="direct:brmsRoute"/>
            <setProperty id="_setProperty1" propertyName="BookingResp">
                <simple>${body}</simple>
            </setProperty>
            <process id="_process1" ref="brmsReqProc"/>
            <marshal id="_marshal4">
                <json library="Gson" prettyPrint="true"/>
            </marshal>
            <setHeader headerName="Content-Type" id="_setHeader4">
                <constant>application/json</constant>
            </setHeader>
            <setHeader headerName="Accept" id="_setHeader5">
                <constant>application/json</constant>
            </setHeader>
            <to id="_to8" uri="http4://{{BRMSURL}}?exchangePattern=InOut&amp;bridgeEndpoint=true&amp;authUsername={{BRMSUser}}&amp;authPassword={{BRMSPassword}}"/>
            <process id="_process2" ref="brmsRespProc"/>
            <marshal id="_marshal5">
                <json library="Gson" prettyPrint="true"/>
            </marshal>
        </route>
    </camelContext>
</beans>
